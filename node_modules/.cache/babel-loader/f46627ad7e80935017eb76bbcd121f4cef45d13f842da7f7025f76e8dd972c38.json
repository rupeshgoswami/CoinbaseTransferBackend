{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = {\n  class: \"section\"\n};\nconst _hoisted_4 = {\n  class: \"section\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"status-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[17] || (_cache[17] = _createElementVNode(\"h1\", null, \"Coinbase Transfer Operations\", -1 /* HOISTED */)), _createCommentVNode(\" Buy Stablecoin Section \"), _createElementVNode(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"Buy Stablecoin\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.buy.accountId = $event),\n    placeholder: \"Account ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.buy.accountId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.buy.amount = $event),\n    type: \"number\",\n    placeholder: \"Amount\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.buy.amount]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.buy.currency = $event),\n    placeholder: \"Currency (e.g., USDC)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.buy.currency]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.buyStablecoin && $options.buyStablecoin(...args))\n  }, \"Buy\")]), _createCommentVNode(\" Transfer Stablecoin Section \"), _createElementVNode(\"div\", _hoisted_3, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"Transfer Stablecoin\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.transfer.fromAccountId = $event),\n    placeholder: \"From Account ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.transfer.fromAccountId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.transfer.toAddress = $event),\n    placeholder: \"To Address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.transfer.toAddress]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.transfer.amount = $event),\n    type: \"number\",\n    placeholder: \"Amount\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.transfer.amount]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.transfer.currency = $event),\n    placeholder: \"Currency (e.g., USDC)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.transfer.currency]]), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.transferStablecoin && $options.transferStablecoin(...args))\n  }, \"Transfer\")]), _createCommentVNode(\" Sell Stablecoin Section \"), _createElementVNode(\"div\", _hoisted_4, [_cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"Sell Stablecoin\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.sell.accountId = $event),\n    placeholder: \"Account ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.sell.accountId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.sell.amount = $event),\n    type: \"number\",\n    placeholder: \"Amount\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.sell.amount]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.sell.currency = $event),\n    placeholder: \"Currency (e.g., USDC)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.sell.currency]]), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.sellStablecoin && $options.sellStablecoin(...args))\n  }, \"Sell\")]), _createCommentVNode(\" Status Message \"), $data.statusMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"Status\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.statusMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$data","buy","accountId","placeholder","amount","type","currency","onClick","args","$options","buyStablecoin","_hoisted_3","transfer","fromAccountId","toAddress","transferStablecoin","_hoisted_4","sell","sellStablecoin","statusMessage","_hoisted_5","_toDisplayString"],"sources":["C:\\Users\\rupes\\Desktop\\StartupPayment\\coinbase-transfer-frontend\\src\\components\\CoinbaseTransfer.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Coinbase Transfer Operations</h1>\r\n\r\n    <!-- Buy Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Buy Stablecoin</h2>\r\n      <input v-model=\"buy.accountId\" placeholder=\"Account ID\" />\r\n      <input v-model=\"buy.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"buy.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"buyStablecoin\">Buy</button>\r\n    </div>\r\n\r\n    <!-- Transfer Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Transfer Stablecoin</h2>\r\n      <input v-model=\"transfer.fromAccountId\" placeholder=\"From Account ID\" />\r\n      <input v-model=\"transfer.toAddress\" placeholder=\"To Address\" />\r\n      <input v-model=\"transfer.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"transfer.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"transferStablecoin\">Transfer</button>\r\n    </div>\r\n\r\n    <!-- Sell Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Sell Stablecoin</h2>\r\n      <input v-model=\"sell.accountId\" placeholder=\"Account ID\" />\r\n      <input v-model=\"sell.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"sell.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"sellStablecoin\">Sell</button>\r\n    </div>\r\n\r\n    <!-- Status Message -->\r\n    <div v-if=\"statusMessage\" class=\"status-message\">\r\n      <h3>Status</h3>\r\n      <p>{{ statusMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      buy: { accountId: '', amount: '', currency: 'USDC' },\r\n      transfer: { fromAccountId: '', toAddress: '', amount: '', currency: 'USDC' },\r\n      sell: { accountId: '', amount: '', currency: 'USDC' },\r\n      statusMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async buyStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/buy', {\r\n          accountId: this.buy.accountId,\r\n          amount: this.buy.amount,\r\n          currency: this.buy.currency\r\n        });\r\n        this.statusMessage = `Buy Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Buy Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    },\r\n    async transferStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/transfer', {\r\n          fromAccountId: this.transfer.fromAccountId,\r\n          toAddress: this.transfer.toAddress,\r\n          amount: this.transfer.amount,\r\n          currency: this.transfer.currency\r\n        });\r\n        this.statusMessage = `Transfer Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Transfer Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    },\r\n    async sellStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/sell', {\r\n          accountId: this.sell.accountId,\r\n          amount: this.sell.amount,\r\n          currency: this.sell.currency\r\n        });\r\n        this.statusMessage = `Sell Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Sell Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput {\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.status-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border: 1px solid #007bff;\r\n  background-color: #e7f1ff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}