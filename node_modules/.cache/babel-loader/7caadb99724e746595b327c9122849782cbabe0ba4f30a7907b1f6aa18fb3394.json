{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      buy: {\n        accountId: '',\n        amount: '',\n        currency: 'USDC'\n      },\n      transfer: {\n        fromAccountId: '',\n        toAddress: '',\n        amount: '',\n        currency: 'USDC'\n      },\n      sell: {\n        accountId: '',\n        amount: '',\n        currency: 'USDC'\n      },\n      statusMessage: ''\n    };\n  },\n  methods: {\n    async buyStablecoin() {\n      try {\n        const response = await axios.post('http://localhost:8080/api/coinbase/buy', {\n          accountId: this.buy.accountId,\n          amount: this.buy.amount,\n          currency: this.buy.currency\n        });\n        this.statusMessage = `Buy Success: ${JSON.stringify(response.data)}`;\n      } catch (error) {\n        this.statusMessage = `Buy Failed: ${error.response?.data || error.message}`;\n      }\n    },\n    async transferStablecoin() {\n      try {\n        const response = await axios.post('http://localhost:8080/api/coinbase/transfer', {\n          fromAccountId: this.transfer.fromAccountId,\n          toAddress: this.transfer.toAddress,\n          amount: this.transfer.amount,\n          currency: this.transfer.currency\n        });\n        this.statusMessage = `Transfer Success: ${JSON.stringify(response.data)}`;\n      } catch (error) {\n        this.statusMessage = `Transfer Failed: ${error.response?.data || error.message}`;\n      }\n    },\n    async sellStablecoin() {\n      try {\n        const response = await axios.post('http://localhost:8080/api/coinbase/sell', {\n          accountId: this.sell.accountId,\n          amount: this.sell.amount,\n          currency: this.sell.currency\n        });\n        this.statusMessage = `Sell Success: ${JSON.stringify(response.data)}`;\n      } catch (error) {\n        this.statusMessage = `Sell Failed: ${error.response?.data || error.message}`;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","buy","accountId","amount","currency","transfer","fromAccountId","toAddress","sell","statusMessage","methods","buyStablecoin","response","post","JSON","stringify","error","message","transferStablecoin","sellStablecoin"],"sources":["C:\\Users\\rupes\\Desktop\\StartupPayment\\coinbase-transfer-frontend\\src\\components\\CoinbaseTransfer.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Coinbase Transfer Operations</h1>\r\n\r\n    <!-- Buy Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Buy Stablecoin</h2>\r\n      <input v-model=\"buy.accountId\" placeholder=\"Account ID\" />\r\n      <input v-model=\"buy.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"buy.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"buyStablecoin\">Buy</button>\r\n    </div>\r\n\r\n    <!-- Transfer Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Transfer Stablecoin</h2>\r\n      <input v-model=\"transfer.fromAccountId\" placeholder=\"From Account ID\" />\r\n      <input v-model=\"transfer.toAddress\" placeholder=\"To Address\" />\r\n      <input v-model=\"transfer.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"transfer.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"transferStablecoin\">Transfer</button>\r\n    </div>\r\n\r\n    <!-- Sell Stablecoin Section -->\r\n    <div class=\"section\">\r\n      <h2>Sell Stablecoin</h2>\r\n      <input v-model=\"sell.accountId\" placeholder=\"Account ID\" />\r\n      <input v-model=\"sell.amount\" type=\"number\" placeholder=\"Amount\" />\r\n      <input v-model=\"sell.currency\" placeholder=\"Currency (e.g., USDC)\" />\r\n      <button @click=\"sellStablecoin\">Sell</button>\r\n    </div>\r\n\r\n    <!-- Status Message -->\r\n    <div v-if=\"statusMessage\" class=\"status-message\">\r\n      <h3>Status</h3>\r\n      <p>{{ statusMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      buy: { accountId: '', amount: '', currency: 'USDC' },\r\n      transfer: { fromAccountId: '', toAddress: '', amount: '', currency: 'USDC' },\r\n      sell: { accountId: '', amount: '', currency: 'USDC' },\r\n      statusMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async buyStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/buy', {\r\n          accountId: this.buy.accountId,\r\n          amount: this.buy.amount,\r\n          currency: this.buy.currency\r\n        });\r\n        this.statusMessage = `Buy Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Buy Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    },\r\n    async transferStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/transfer', {\r\n          fromAccountId: this.transfer.fromAccountId,\r\n          toAddress: this.transfer.toAddress,\r\n          amount: this.transfer.amount,\r\n          currency: this.transfer.currency\r\n        });\r\n        this.statusMessage = `Transfer Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Transfer Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    },\r\n    async sellStablecoin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/coinbase/sell', {\r\n          accountId: this.sell.accountId,\r\n          amount: this.sell.amount,\r\n          currency: this.sell.currency\r\n        });\r\n        this.statusMessage = `Sell Success: ${JSON.stringify(response.data)}`;\r\n      } catch (error) {\r\n        this.statusMessage = `Sell Failed: ${error.response?.data || error.message}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput {\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.status-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border: 1px solid #007bff;\r\n  background-color: #e7f1ff;\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAC;MACpDC,QAAQ,EAAE;QAAEC,aAAa,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEJ,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAC;MAC5EI,IAAI,EAAE;QAAEN,SAAS,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAC;MACrDK,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,wCAAwC,EAAE;UAC1EX,SAAS,EAAE,IAAI,CAACD,GAAG,CAACC,SAAS;UAC7BC,MAAM,EAAE,IAAI,CAACF,GAAG,CAACE,MAAM;UACvBC,QAAQ,EAAE,IAAI,CAACH,GAAG,CAACG;QACrB,CAAC,CAAC;QACF,IAAI,CAACK,aAAY,GAAI,gBAAgBK,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;MACtE,EAAE,OAAOgB,KAAK,EAAE;QACd,IAAI,CAACP,aAAY,GAAI,eAAeO,KAAK,CAACJ,QAAQ,EAAEZ,IAAG,IAAKgB,KAAK,CAACC,OAAO,EAAE;MAC7E;IACF,CAAC;IACD,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMN,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,6CAA6C,EAAE;UAC/EP,aAAa,EAAE,IAAI,CAACD,QAAQ,CAACC,aAAa;UAC1CC,SAAS,EAAE,IAAI,CAACF,QAAQ,CAACE,SAAS;UAClCJ,MAAM,EAAE,IAAI,CAACE,QAAQ,CAACF,MAAM;UAC5BC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAACD;QAC1B,CAAC,CAAC;QACF,IAAI,CAACK,aAAY,GAAI,qBAAqBK,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;MAC3E,EAAE,OAAOgB,KAAK,EAAE;QACd,IAAI,CAACP,aAAY,GAAI,oBAAoBO,KAAK,CAACJ,QAAQ,EAAEZ,IAAG,IAAKgB,KAAK,CAACC,OAAO,EAAE;MAClF;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,yCAAyC,EAAE;UAC3EX,SAAS,EAAE,IAAI,CAACM,IAAI,CAACN,SAAS;UAC9BC,MAAM,EAAE,IAAI,CAACK,IAAI,CAACL,MAAM;UACxBC,QAAQ,EAAE,IAAI,CAACI,IAAI,CAACJ;QACtB,CAAC,CAAC;QACF,IAAI,CAACK,aAAY,GAAI,iBAAiBK,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;MACvE,EAAE,OAAOgB,KAAK,EAAE;QACd,IAAI,CAACP,aAAY,GAAI,gBAAgBO,KAAK,CAACJ,QAAQ,EAAEZ,IAAG,IAAKgB,KAAK,CAACC,OAAO,EAAE;MAC9E;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}